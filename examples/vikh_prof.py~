import numpy as np
import massmod_params as params

'''
for mock data testing
'''

def vikh_tprof(pars,r_arr):

    '''
    Temperature profile from Vikhlinin+06 Eq. 4-6 and Table 3. Used for example purposes.
    
    Args:
    -----
    pars (array): parameters of temperature model
    r_arr (array): radii values at which to calculate values of temperature profile
    
    Returns:
    --------
    T3D: temperature profile for given model params in Vikhlinin+06 and input radius values

    References:
    -----------
    Vikhlinin, A., Kravtsov, A., Forman, W., et al. 2006, ApJ, 640, 691
    '''
    
    T0 = pars[0]
    rt = pars[1]
    a = pars[2]
    b = pars[3]
    c = pars[4]
    Tmin = pars[5]

    rcool = pars[6]
    acool = pars[7]


    x=(r_arr/rcool)**acool
    tcool=(x+(Tmin/T0))/(x+1.)
    
    t=((r_arr/rt)**-a)/((1.+((r_arr/rt)**b))**(c/b))
    
    T3D=T0*tcool*t


    return T3D



def vikh_neprof(pars,r):

    '''
    Electron number density profile from Vikhlinin+06 Eq. 3 and Table 2. Used for example purposes.
    
    Args:
    -----
    pars (array): parameters of temperature model
    r_arr (array): radii values at which to calculate values of temperature profile
    
    Returns:
    --------
    ne(r): electron number density  profile for given model params in Vikhlinin+06 and input radius values

    References:
    -----------
    Vikhlinin, A., Kravtsov, A., Forman, W., et al. 2006, ApJ, 640, 691
    '''

    
    
    rdet=pars[0]
    n0=pars[1]
    rc=pars[2]
    rs=pars[3]
    alpha=pars[4]
    beta=pars[5]
    epsilon=pars[6]
    n02=pars[7]
    rc2=pars[8]
    beta2=pars[9]

    gamma=3.


    ne=np.sqrt(params.ne_over_np*(((n0**2.)*((r/rc)**-alpha)/(((1.+(r/rc)**2.)**((3.*beta)-(alpha/2.)))*((1.+(r/rs)**gamma)**(epsilon/gamma))))+((n02**2.)/((1.+(r/rc2)**2.)**(3.*beta2)))))

    return ne
